<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.ui">
<annotation>
   <appInfo>
      <meta.schema plugin="org.eclipse.ui" id="propertyPages" name="Property Pages"/>
   </appInfo>
   <documentation>
      Property pages offer an alternative to making object properties
available for viewing and editing through the workbenchProperties
view. Properties may be restrictive if editing requires controls
that cannot be created in-place due to their size. The problem
issolved by offering a button with a "..." label that launches
an editor in a separate dialog box. However, if many of the properties
requirethis solution, it may be better to relocate them into
property pages. Another reason to use property pages would be
when a number ofproperties logically go together and need to
be clustered in a page, rather than scattered in the property
sheet (this problem may bepartially solved by grouping properties
in the property sheet together). In some applications, it may
even make sense to expose someproperties via the property sheet,
and some via the property pages. 
&lt;p&gt;
Property pages are shown in
a dialog box that is normally visible when Properties menu item
is selected on a pop-up menu for an object.In addition to the
object class, the name filter can optionally be supplied to register
property pages only for specific object types.
   </documentation>
</annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="page" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a unique extension point identifier
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional extension identifier
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional extension name
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="page">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name" icon="icon"/>
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="filter" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique name that will be used to identify this page
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  a translatable name that will be used in the UI for this page
               </documentation>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  a relative path to an icon that will be used in the UI in addition to the page name
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="objectClass" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified name of the class for which the page is registered.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified name of the class that implements &lt;tt&gt;org.eclipse.ui.IWorkbenchPropertyPage&lt;/tt&gt;
interface.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.ui.dialogs.PropertyPage:org.eclipse.ui.IWorkbenchPropertyPage"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="nameFilter" type="string">
            <annotation>
               <documentation>
                  an optional attribute that allows registration conditional on
wild card match applied to the target object name.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="adaptable" type="boolean">
            <annotation>
               <documentation>
                  a flag that indicates if types that adapt to IResource should use this property page.
This flag is used if objectClass adapts to IResource.  Default value is false.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="filter">
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  the name of an object attribute.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  the value of an object attribute.  In combination with
the name attribute, the name value pair is used to 
define the target object for a property page.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of the property page definition: 
&lt;p&gt;
&lt;pre&gt;
   &lt;extension point="org.eclipse.ui.propertyPages"&gt; 
      &lt;page 
         id="com.xyz.projectPage" 
         name="XYZ Java Properties" 
         objectClass="org.eclipse.core.resources.IFile" 
         class="com.xyz.ppages.JavaPropertyPage" 
         nameFilter="*.java"&gt; 
      &lt;/page&gt; 
    &lt;/extension&gt; 
&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         Attribute &lt;samp&gt;class&lt;/samp&gt; must specify a fully qualified name 
of the class that implements 
&lt;samp&gt;org.eclipse.ui.IWorkbenchPropertyPage&lt;/samp&gt;.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         Some objects provided by the workbench may have 
property pages registered. Plug-ins are allowed 
to add more property pages for these objects. 
Property pages are not limited to workbench 
resources: all objects showing up in the workbench 
(even domain specific objects created by the plug-ins) 
may have property pages and other plug-ins are 
allowed to register property pages for them.
      </documentation>
   </annotation>

</schema>
