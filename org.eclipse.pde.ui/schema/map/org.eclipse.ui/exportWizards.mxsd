<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.ui">
<annotation>
   <appInfo>
      <meta.schema plugin="org.eclipse.ui" id="exportWizards" name="Export Wizards"/>
   </appInfo>
   <documentation>
      This extension point provides for plugging in alternative export
engines. These engines will be shown as choices in the export
dialog box. 
&lt;p&gt;
Wizards can be made unavailable for certain source
objects (current selection) using optional selection subelements.
For example, an export wizard can be made available only for
source objects of type &lt;tt&gt;IProject&lt;/tt&gt;.
   </documentation>
</annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="wizard" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="wizard">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name" icon="icon"/>
         </appInfo>
         <documentation>
            an element that will be used to create export wizard
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="description" minOccurs="0" maxOccurs="1"/>
            <element ref="selection" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique name that will be used to identify this wizard
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  a translatable name that will be used in the dialog box to represent this wizard
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified name of the class that implements &lt;tt&gt;org.eclipse.ui.IExportWizard&lt;/tt&gt;
interface
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.jface.wizard.Wizard:org.eclipse.ui.IExportWizard"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  a relative name of the icon that will be used 
alongside the wizard name in the export engine listing.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="description" type="string">
      <annotation>
         <documentation>
            an optional subelement whose body should represent a short description
of the export engine functionality.
         </documentation>
      </annotation>
   </element>

   <element name="selection">
      <annotation>
         <documentation>
            an optional element that restricts the types and names of objects that can be selected 
when the wizard is invoked.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name filter that will be run against the target object name 
in order to calculate if the wizard applies to it
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified name of the target object class for which the wizard applies to
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of an export extension definition:
&lt;p&gt;
&lt;pre&gt;
   &lt;extension 
       point="org.eclipse.ui.exportWizards"&gt; 
      &lt;wizard 
         id="com.xyz.ExportWizard1" 
         name="XYZ Web Exporter" 
         class="com.xyz.exports.ExportWizard1" 
         icon="./icons/import1.gif"&gt; 
         &lt;description&gt; 
            A simple engine that exports Web project 
         &lt;/description&gt; 
         &lt;selection class="org.eclipse.core.resources.IProject"/&gt; 
      &lt;/wizard&gt; 
   &lt;/extension&gt; 
&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         The value of the &lt;samp&gt;class&lt;/samp&gt; attribute 
must be a name of the class that implements 
&lt;samp&gt;org.eclipse.ui.IExportWizard&lt;/samp&gt;.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         The workbench comes preloaded with basic export engines 
for files and directories.
      </documentation>
   </annotation>

</schema>
