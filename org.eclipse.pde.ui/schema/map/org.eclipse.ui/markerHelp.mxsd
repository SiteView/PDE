<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.ui">
<annotation>
   <appInfo>
      <meta.schema plugin="org.eclipse.ui" id="markerHelp" name="Marker Help"/>
   </appInfo>
   <documentation>
      This extension point is used to associate a help context id with a specific "kind" of marker (a marker of a certain type or having certain attribute values).
   </documentation>
</annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="markerHelp" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="markerHelp">
      <complexType>
         <sequence>
            <element ref="attribute" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="markerType" type="string">
            <annotation>
               <documentation>
                  the unique type of the marker for which the help context applies.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="helpContextId" type="string" use="required">
            <annotation>
               <documentation>
                  the unique id of the help context.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="attribute">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name"/>
         </appInfo>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  the name of the attribute whose value is being specified.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  the specified value of the attribute.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of a marker help extension (not the sub-element and the way attributes are used):

&lt;p&gt;
&lt;pre&gt;
	&lt;extension point="org.eclipse.ui.markerHelp"&gt;
		&lt;markerHelp
			markerType="org.eclipse.ui.examples.readmetool.readmemarker"
			helpContextId="org.eclipse.ui.examples.readmetool.marker_example1_context"&gt;
			&lt;attribute name="org.eclipse.ui.examples.readmetool.id" value="1234"/&gt;
		&lt;/markerHelp&gt;
	&lt;/extension&gt;
&lt;/pre&gt;
&lt;/p&gt;

In the example above, a help context id is associated with markers of type org.eclipse.ui.examples.readmetool.readmemarker
whose org.eclipse.ui.examples.readmetool.id attribute has a value of 1234.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         It is up to the developer to ensure that only a single help context id is supplied for a given marker.
If two or more help context ids are supplied for a given kind of marker, the workbench does not define which will be returned.
However the workbench does define that the "most specific" context id will always be returned for a given marker.
That is, a context id associated with three matching attribute values will be returned before a context id associated with only two.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

</schema>
