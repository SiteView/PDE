<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.ui.viewActions">
<annotation>
   <appInfo>
      <meta.schema plugin="org.eclipse.ui" id="viewActions" name="View Actions"/>
   </appInfo>
   <documentation>
      This extension point allows tools to add menus, menu items and
toolbar buttons to the views registered by other plug-ins. Each
view has a local pulldown menu normally activated by clicking
on the top right area. Other plug-ins can contribute submenus
and actions to this menu. Plug-ins are allowed to contribute
actions to the view toolbar. View owners are first given achance
to populate these areas. Optional additions by other plug-ins
are appended.   
&lt;p&gt; 
Action definition is the same for both the
local toolbar and the pulldown menu. Additional markup is reserved
for submenus in case the plug-in defines new ones, as opposed
to adding to the existing menu.
   </documentation>
</annotation>

   <element name="extension">
      <complexType>
         <sequence>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a unique extension point identifier
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional extension identifier
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional extension name
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="viewContribution">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique identifier that can be used to reference this contribution
               </documentation>
            </annotation>
         </attribute>
         <attribute name="targetID" type="string" use="required">
            <annotation>
               <documentation>
                  the ID of the view (as specified in the registry) into which the contribution is made
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="menu">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="label"/>
         </appInfo>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique identifier that can be used to reference this menu
               </documentation>
            </annotation>
         </attribute>
         <attribute name="label" type="string">
            <annotation>
               <documentation>
                  the text label of the new menu. The label should include mnemonic information.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="path" type="string">
            <annotation>
               <documentation>
                  the location of the menu starting from the pulldown, with the last token representing the named group. If omitted, the
menu will be added at the end of the pulldown.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="action">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="label"/>
         </appInfo>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique identifier that can be used as a reference for this action.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="label" type="string" use="required">
            <annotation>
               <documentation>
                  a translatable name that is used in various ways, depending on
the context. In menus, it is used as the menu text. In toolbars,
it is used as the button label. The label can contain JFace-encoded
mnemonic and accelerator information (see example).
               </documentation>
            </annotation>
         </attribute>
         <attribute name="menubarPath" type="string">
            <annotation>
               <documentation>
                  a slash-delimited path ('/') that is used to specify the location
of the action in the pulldown menu. Each token in the path,
except the last one, represents an existing menu in the hierarchy.
The last token represents the named separator group into
which the action will be added. If the path is omitted, the action
will not appear in the pulldown.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="toolbarPath" type="string">
            <annotation>
               <documentation>
                  a named group within the local toolbar of the target view. If
the group does not exist, it will be created. If omitted,
the action will not appear in the local toolbar.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="tooltip" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="state" type="boolean">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="enablesFor" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="separator">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name"/>
         </appInfo>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  name of the separator that can later be referenced as the last
token in the action path. Therefore, separators serve as
named groups into which actions can be added.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="selection">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified name of the class or interface that each object in the selection must 
subclass or implement in order to enable the action.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  a wild card filter that can optionally be applied to objects in the selection. If this filter 
is specified and the match fails, the action will be disabled.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of a view actions extension point
(note the subelements and the way attributes are used):     

&lt;p&gt;
&lt;pre&gt;
   &lt;extension point="org.eclipse.ui.viewActions"&gt; 
      &lt;viewContribution 
         id="com.xyz.xyzViewC1" 
         targetID="com.ibm.itp.ui.views.ResourceNavigator"&gt; 
         &lt;menu id="com.xyz.xyzMenu" path="additions"&gt; 
            &lt;separator name="group1"/&gt; 
         &lt;/menu&gt; 
         &lt;action id="com.xyz.runXYZ" 
              label="&amp;amp;Run XYZ Tool"
              menubarPath="com.xyz.xyzMenu/group1" 
              toolbarPath="Normal/XYZ" 
              icon="icons/runXYZ.gif" 
              tooltip="Run XYZ Tool" 
              class="com.xyz.actions.RunXYZ" 
              enablesFor="1"/&gt; 
              &lt;selection class="com.ibm.itp.core.api.resources.IFile" name="*.java"/&gt;
         &lt;/action&gt; 
   &lt;/extension&gt;
&lt;/pre&gt;   
&lt;p&gt;
In the example above, the specified action will only enable for
a single selection (&lt;samp&gt;enablesFor&lt;/samp&gt; attribute). In addition,
each object in this selection must implement the specified interface
(&lt;samp&gt;IFile&lt;/samp&gt;) and must be a Java file. Multiple selection
elements can be specified, meaning 'one of'.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

</schema>
