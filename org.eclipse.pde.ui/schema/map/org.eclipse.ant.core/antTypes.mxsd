<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.ant.core">
<annotation>
   <appInfo>
      <meta.schema plugin="org.eclipse.ant.core" id="antTypes" name="Ant Types"/>
   </appInfo>
   <documentation>
      Allows plug-ins to define arbitrary Ant datatypes for 
use by the Ant infrastructure.  The standard Ant 
infrastructure allows for the addition of arbitrary 
datatypes.  Unfortunately, it is unlikely that the 
Ant Core plug-in would have the classes required 
by these datatypes on its classpath (or that of any 
of its prerequisites).  To address this, clients 
should define an extension which plugs into this 
extension-point and maps a datatype name onto a class.  
The Ant plug-in can then request that the declaring 
plug-in load the specified class.
   </documentation>
</annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="antType" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="antType">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name"/>
         </appInfo>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  name of the type to be defined
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  the fully qualified name of a Java class implementing 
the datatype.  Generally this class must be a subclass of
&lt;samp&gt;org.apache.tools.ant.types.DataType&lt;/samp&gt;.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.apache.tools.ant.types.DataType"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="library" type="string" use="required">
            <annotation>
               <documentation>
                  a path relative to the plug-in install location
for the library containing the type.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of an object declaration: 
&lt;p&gt;
&lt;pre&gt;
   &lt;extension point="org.eclipse.ant.core.antType"&gt;
      &lt;antType name="coolType" class="com.example.CoolType"/&gt;
   &lt;/extension&gt; 
&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         The objects declared via this extension-point are 
accessible though the following API:
&lt;p&gt;
&lt;pre&gt;
   org.eclipse.core.ant.AntPlugin.getTypeExtensions 
&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         The platform itself supplies a number of datatypes 
including commaPatternSet.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

</schema>
